<?php

namespace {{ namespace }};

use Illuminate\Http\Client\Factory;
use Illuminate\Http\Client\PendingRequest;

class {{ name }}Factory
{
    public function __construct(private Factory $httpFactory) {}

    /**
     * Create a new HTTP client instance with predefined configuration.
     */
    public function make(): PendingRequest
    {
        return $this->httpFactory
            ->withHeaders([
                'Accept' => 'application/json',
                'Content-Type' => 'application/json',
                // Add your default headers here
            ])
            ->timeout(30)
            ->retry(3, 100)
            ->baseUrl('https://api.example.com') // Replace with your API base URL
            ->withOptions([
                'verify' => true,
                // Add additional cURL options here
            ]);
    }

    /**
     * Create a new HTTP client instance with authentication.
     */
    public function withAuth(string $token): PendingRequest
    {
        return $this->make()
            ->withToken($token);
    }

    /**
     * Create a new HTTP client instance with basic authentication.
     */
    public function withBasicAuth(string $username, string $password): PendingRequest
    {
        return $this->make()
            ->withBasicAuth($username, $password);
    }

    /**
     * Create a new HTTP client instance with custom headers.
     */
    public function withHeaders(array $headers): PendingRequest
    {
        return $this->make()
            ->withHeaders($headers);
    }

    /**
     * Create a new HTTP client instance with custom timeout.
     */
    public function withTimeout(int $seconds): PendingRequest
    {
        return $this->make()
            ->timeout($seconds);
    }

    /**
     * Create a new HTTP client instance for debugging.
     */
    public function debug(): PendingRequest
    {
        return $this->make()
            ->dump()
            ->withOptions(['debug' => true]);
    }
}
